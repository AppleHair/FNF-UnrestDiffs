import funkin.modding.base.ScriptedFlxSpriteGroup;
import funkin.Paths;
import funkin.play.cutscene.VideoCutscene;
import funkin.play.PlayState;
import funkin.play.PlayStatePlaylist;
import funkin.play.song.Song;

class StressSong extends Song {
    // Set these on onCountDownStart through
    // a module to override default behavior
    public var hasPlayedCutscene:Bool = false;
    public var cutsceneVideoPath:String = 'stressCutscene';
    public var cancelTankmanGroup:Bool = false;
    public var picoSpeakerScriptImpl:Bool = false;// Gets set to true for pico-speaker by default
    public var tankmanGroupClassName:String = 'TankmanSpriteGroup';

    function new() {
        super("stress");
    }

    var tankmanGroup:TankmanSpriteGroup = null;

    public override function onCountdownStart(event:CountdownScriptEvent):Void {
        super.onCountdownStart(event);

        if (!PlayStatePlaylist.isStoryMode) hasPlayedCutscene = true;

        if (!hasPlayedCutscene) {
            trace('Pausing countdown to play a video cutscene (`stress`)');

            hasPlayedCutscene = true;

            event.cancel(); // CANCEL THE COUNTDOWN!

            startVideo();
        }

        if (cancelTankmanGroup) {
            if (tankmanGroup != null) {
                PlayState.instance.currentStage.remove(tankmanGroup);
                tankmanGroup.destroy();
                tankmanGroup = null;
            }
            trace('Cancelled tankman group.');
            return;
        }

        trace('Initializing tankman group...');

        tankmanGroup = ScriptedFlxSpriteGroup.init(tankmanGroupClassName);

        if (tankmanGroup != null) {
            // resets the tankmen!
            tankmanGroup.scriptCall('reset');

            tankmanGroup.zIndex = 30;
            PlayState.instance.currentStage.add(tankmanGroup);
            PlayState.instance.currentStage.refresh();
        } else {
            trace('Failed to initialize tankman group!');
        }
    }

    function startVideo() {
        VideoCutscene.play(Paths.videos(cutsceneVideoPath));
    }

    /**
     * Don't replay the cutscene between restarts.
     */
    function onSongRetry(event:ScriptEvent) {
        super.onSongRetry(event);

        hasPlayedCutscene = true;

        if (PlayState.instance.currentStage.getGirlfriend() != null && picoSpeakerScriptImpl) {
            PlayState.instance.currentStage.getGirlfriend().scriptCall('reset');
            trace('reset pico!');
        }

        if (cancelTankmanGroup) {return;}
        // resets the tankmen!
        if (tankmanGroup != null) {
            tankmanGroup.scriptCall('reset');
        }
    }

    /**
     * Replay the cutscene after leaving the song.
     */
    function onCreate(event:ScriptEvent):Void {
        super.onCreate(event);

        hasPlayedCutscene = false;
        cancelTankmanGroup = false;
        cutsceneVideoPath = 'stressCutscene';
        tankmanGroupClassName = 'TankmanSpriteGroup';
        switch (PlayState.instance.currentStage.getGirlfriend().characterId) {
            case 'pico-speaker':
                picoSpeakerScriptImpl = true;
            default:
                picoSpeakerScriptImpl = false;
        }
    }

    function kill():Void {
        if (tankmanGroup != null) {
            PlayState.instance.currentStage.remove(tankmanGroup);
            tankmanGroup.destroy();
            tankmanGroup = null;
        }
    }
}