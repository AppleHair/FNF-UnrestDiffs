import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxTimer;
import funkin.audio.FunkinSound;
import funkin.modding.base.ScriptedFlxAtlasSprite;
import funkin.Paths;
import funkin.play.PlayState;
import funkin.play.PlayStatePlaylist;
import funkin.play.song.Song;
import funkin.save.Save;

class EggnogSong extends Song {

    public var hasPlayedCutscene:Bool = false;
	public var cutsceneOnlyInStoryMode:Bool = true;
	public var santaEmotionSoundPath:String = 'santa_emotion';
	public var santaDiesSoundPath:String = 'santa_shot_n_falls';
	public var dadShootsClassName:String = 'DadShootsSprite';
	public var santaClassName:String = 'SantaDiesSprite';
	public var hasSantaProp:Boolean = true;// Gets set to false if 'santa' doesn't exist in the stage
	public var santaPos:Array<Float> = [-458, 498];
	public var santaZIndexFromDad:Int = 10;

    function new() {
        super("eggnog");
    }
	//var santaDead:ScriptedFlxAtlasSprite;

    public override function isSongNew(currentDifficulty:String):Bool {
		if(currentDifficulty == 'erect' || currentDifficulty == 'nightmare') {
			return !beatenErectSong();
		}
        return false;
	}

	function beatenErectSong():Bool {
		return Save.instance.hasBeatenSong(this.id, ['erect', 'nightmare']);
	}

	public override function onSongEnd(event:CountdownScriptEvent):Void {
		super.onSongEnd(event);
		
		if (cutsceneOnlyInStoryMode && !PlayStatePlaylist.isStoryMode && !hasPlayedCutscene) {
			hasPlayedCutscene = true;
			// only play this on erect if we are in story mode or haven't beaten the song before..
			if (PlayState.instance.currentVariation == 'erect' && !beatenErectSong()) {
				hasPlayedCutscene = false;
			}
		}
		

        if (!hasPlayedCutscene) {
            hasPlayedCutscene = true;

            event.cancel();

			// if the current stage doesn't have a santa,
            // cancel the usage of the santa prop in this cutscene
            if (PlayState.instance.currentStage.namedProps.get('santa') == null) {
                hasSantaProp = false;
            }

		    // start the video cutscene and hide it so the other stuff can happen after
            startCutscene();
        } else {
			// Make sure the cutscene can play again next time!
			hasPlayedCutscene = false;
			// DO NOT CANCEL THE EVENT!
		}
	}

	function startCutscene() {

        var santaDead:ScriptedFlxAtlasSprite = ScriptedFlxAtlasSprite.init(santaClassName, 0, 0);

        santaDead.x = santaPos[0];
		santaDead.y = santaPos[1];
		santaDead.zIndex = PlayState.instance.currentStage.getDad().zIndex + santaZIndexFromDad - 1;

		if (hasSantaProp) {
			var normalSanta = PlayState.instance.currentStage.getNamedProp('santa');
			normalSanta.visible = false;
			santaDead.x = normalSanta.x + 382;// -840 + 382 = -458
			santaDead.y = normalSanta.y + 348;// 150 + 348 = 498
			santaDead.zIndex = normalSanta.zIndex - 1;
		}

        PlayState.instance.currentStage.add(santaDead);
		PlayState.instance.currentStage.refresh(); // Apply z-index.

        santaDead.scriptCall('playCutscene');

        PlayState.instance.currentStage.getDad().visible = false;
        var parentsShoot:ScriptedFlxAtlasSprite = ScriptedFlxAtlasSprite.init(dadShootsClassName, 0, 0);

        parentsShoot.x = PlayState.instance.currentStage.getDad().x - 116;// -400 - 116 = -516
		parentsShoot.y = PlayState.instance.currentStage.getDad().y + 403;// 100 + 403 = 503
		parentsShoot.zIndex = santaDead.zIndex - 1;

        PlayState.instance.currentStage.add(parentsShoot);
		PlayState.instance.currentStage.refresh(); // Apply z-index.

        parentsShoot.scriptCall('playCutscene');

		//FlxTween.tween(PlayState.instance.camHUD, {alpha: 0}, 1);

		PlayState.instance.isInCutscene = true;
		hasPlayedCutscene = true;

		PlayState.instance.currentStage.getBoyfriend().danceEvery = 0;
		PlayState.instance.currentStage.getDad().danceEvery = 0;

        PlayState.instance.tweenCameraToPosition(santaDead.x + 300, santaDead.y, 2.8, FlxEase.expoOut);
		PlayState.instance.tweenCameraZoom(0.73, 2, true, FlxEase.quadInOut);

		FunkinSound.playOnce(Paths.sound(santaEmotionSoundPath), 1);

		new FlxTimer().start(2.8, function(tmr)
		{
			PlayState.instance.tweenCameraToPosition(santaDead.x + 150, santaDead.y, 9, FlxEase.quartInOut);
			PlayState.instance.tweenCameraZoom(0.79, 9, true, FlxEase.quadInOut);
		});


		new FlxTimer().start(11.3, function(tmr){
			//PlayState.instance.tweenCameraZoom(0.73, 0.8, true, FlxEase.backOut);
			//PlayState.instance.tweenCameraToPosition(santaDead.x + 220, santaDead.y, 0.8, FlxEase.expoOut);
			//PlayState.instance.camGame.shake(0.007, 0.4);
		});
		new FlxTimer().start(11.375, function(tmr)
		{
			FunkinSound.playOnce(Paths.sound(santaDiesSoundPath), 1);
		});

		new FlxTimer().start(12.83, function(tmr)
		{
			PlayState.instance.camGame.shake(0.005, 0.2);
			PlayState.instance.tweenCameraToPosition(santaDead.x + 160, santaDead.y + 80, 5, FlxEase.expoOut);
		});


		new FlxTimer().start(15, function(tmr)
		{
			PlayState.instance.camHUD.fade(0xFF000000, 1, false, null, true);
		});

		new FlxTimer().start(16, function(tmr)
		{
			PlayState.instance.camHUD.fade(0xFF000000, 0.5, true, null, true);
			PlayState.instance.endSong(true);
		});

	}

	/**
     * Replay the cutscene after leaving the song.
     */
    function onCreate(event:ScriptEvent):Void
    {
        super.onCreate(event);

		switch (PlayState.instance.currentVariation) {
			case 'erect':
				hasPlayedCutscene = false;
			default:
				hasPlayedCutscene = true;
		}
		// only play the cutscene on erect..

		cutsceneOnlyInStoryMode = true;
		santaEmotionSoundPath = 'santa_emotion';
		santaDiesSoundPath = 'santa_shot_n_falls';
		dadShootsClassName = 'DadShootsSprite';
		santaClassName = 'SantaDiesSprite';
		hasSantaProp = true;
		santaPos[0] = -458;
		santaPos[1] = 498;
		santaZIndexFromDad = 10;
    }
}