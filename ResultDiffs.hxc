import flixel.FlxG;
import funkin.modding.module.Module;
import funkin.Paths;
import funkin.play.PlayState;
import funkin.play.ResultState;
import funkin.Preferences;
import openfl.utils.Assets;

/**
 * result-diffs was originally created
 * to let other mods add custom difficulty
 * sprites to the result screen, but after
 * the base game added support for custom
 * difficulty sprites on update 0.4.0, this
 * module is now only used for adding an idle
 * animation to the difficulty sprite.
 * 
 * The difficulty sprite image and xml must be
 * located in "shared/images/resultScreen". the
 * name of the image and the xml should be the
 * difficulty id with the prefix "diff_" and the
 * name of the animation in the xml should be "idle".
 */
class ResultDiffs extends Module {

    function new() {
        super('result-diffs');
    }

    /**
     * This function gets added to the memberAdded
     * signal of any ResultState that is opened as
     * a substate. It will add the idle animation
     * to the difficulty sprite if the animation exists.
     * @param diffSprite A sprite that gets added to the result screen.
     */
    function addDifficultyAnimation(diffSprite) {
        // We should check if this sprite is the difficulty
        // sprite before we try to add the animation to it
        if (diffSprite != FlxG.state.subState.difficulty) {return;}
        // This should be the path to the difficulty sprite image and xml
        // (from shared/images/ and without the file extension)
        var path = "resultScreen/diff_" + PlayState.instance.currentDifficulty;
        // if the xml exists, load the image as a sparrow atlas
        if (Assets.exists(Paths.file('shared/images/'+path+'.xml'))) {
            FlxG.state.subState.difficulty.frames = Paths.getSparrowAtlas(path);
            // add the idle animation to the difficulty sprite and play it
            FlxG.state.subState.difficulty.animation.addByPrefix('idle', 'idle', 24, true);
            if (Preferences.flashingLights) {FlxG.state.subState.difficulty.animation.play('idle');}
        }
    }

    /**
     * when a substate is opened, we add the
     * addDifficultyAnimation function to the
     * memberAdded signal of the target state
     * if it's a ResultState.
     */
    public override function onSubStateOpenBegin(event:SubStateScriptEvent):Void {
        super.onSubStateOpenBegin(event);
        if (Std.isOfType(event.targetState, ResultState)) {
            event.targetState.memberAdded.add(this.addDifficultyAnimation);
        }
    }
}
